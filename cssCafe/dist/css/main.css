@charset "UTF-8";
/* Document
 * ========================================================================== */
/**
 * Add border box sizing in all browsers (opinionated).
 */
*,
::before,
::after {
  box-sizing: border-box; }

/**
 * 1. Add text decoration inheritance in all browsers (opinionated).
 * 2. Add vertical alignment inheritance in all browsers (opinionated).
 */
::before,
::after {
  text-decoration: inherit;
  /* 1 */
  vertical-align: inherit;
  /* 2 */ }

/**
 * 1. Use the default cursor in all browsers (opinionated).
 * 2. Change the line height in all browsers (opinionated).
 * 3. Use a 4-space tab width in all browsers (opinionated).
 * 4. Remove the grey highlight on links in iOS (opinionated).
 * 5. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 * 6. Breaks words to prevent overflow in all browsers (opinionated).
 */
html {
  cursor: default;
  /* 1 */
  line-height: 1.5;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  tab-size: 4;
  /* 3 */
  -webkit-tap-highlight-color: transparent;
  -ms-text-size-adjust: 100%;
  /* 5 */
  -webkit-text-size-adjust: 100%;
  /* 5 */
  word-break: break-word;
  /* 6 */ }

/* Sections
 * ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Edge, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
 * ========================================================================== */
/**
 * Remove the margin on nested lists in Chrome, Edge, IE, and Safari.
 */
dl dl,
dl ol,
dl ul,
ol dl,
ul dl {
  margin: 0; }

/**
 * Remove the margin on nested lists in Edge 18- and IE.
 */
ol ol,
ol ul,
ul ol,
ul ul {
  margin: 0; }

/**
 * 1. Add the correct sizing in Firefox.
 * 2. Show the overflow in Edge 18- and IE.
 */
hr {
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * Add the correct display in IE.
 */
main {
  display: block; }

/**
 * Remove the list style on navigation lists in all browsers (opinionated).
 */
nav ol,
nav ul {
  list-style: none;
  padding: 0; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
 * ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Add the correct text decoration in Edge 18-, IE, and Safari.
 */
abbr[title] {
  text-decoration: underline;
  text-decoration: underline dotted; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/* Embedded content
 * ========================================================================== */
/*
 * Change the alignment on media elements in all browsers (opinionated).
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on iframes in all browsers (opinionated).
 */
iframe {
  border-style: none; }

/**
 * Remove the border on images within links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Change the fill color to match the text color in all browsers (opinionated).
 */
svg:not([fill]) {
  fill: currentColor; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Tabular data
 * ========================================================================== */
/**
 * Collapse border spacing in all browsers (opinionated).
 */
table {
  border-collapse: collapse; }

/* Forms
 * ========================================================================== */
/**
 * Remove the margin on controls in Safari.
 */
button,
input,
select {
  margin: 0; }

/**
 * 1. Show the overflow in IE.
 * 2. Remove the inheritance of text transform in Edge 18-, Firefox, and IE.
 */
button {
  overflow: visible;
  /* 1 */
  text-transform: none;
  /* 2 */ }

/**
 * Correct the inability to style buttons in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * 1. Change the inconsistent appearance in all browsers (opinionated).
 * 2. Correct the padding in Firefox.
 */
fieldset {
  border: 1px solid #a0a0a0;
  /* 1 */
  padding: 0.35em 0.75em 0.625em;
  /* 2 */ }

/**
 * Show the overflow in Edge 18- and IE.
 */
input {
  overflow: visible; }

/**
 * 1. Correct the text wrapping in Edge 18- and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 */
legend {
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in Edge 18- and IE.
 * 2. Add the correct vertical alignment in Chrome, Edge, and Firefox.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the inheritance of text transform in Firefox.
 */
select {
  text-transform: none; }

/**
 * 1. Remove the margin in Firefox and Safari.
 * 2. Remove the default vertical scrollbar in IE.
 * 3. Change the resize direction in all browsers (opinionated).
 */
textarea {
  margin: 0;
  /* 1 */
  overflow: auto;
  /* 2 */
  resize: vertical;
  /* 3 */ }

/**
 * Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  padding: 0; }

/**
 * 1. Correct the odd appearance in Chrome, Edge, and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * Remove the inner padding in Chrome, Edge, and Safari on macOS.
 */
::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style upload buttons in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
 * Remove the inner border and padding of focus outlines in Firefox.
 */
::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus outline styles unset by the previous rule in Firefox.
 */
:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Remove the additional :invalid styles in Firefox.
 */
:-moz-ui-invalid {
  box-shadow: none; }

/* Interactive
 * ========================================================================== */
/*
 * Add the correct display in Edge 18- and IE.
 */
details {
  display: block; }

/*
 * Add the correct styles in Edge 18-, IE, and Safari.
 */
dialog {
  background-color: white;
  border: solid;
  color: black;
  display: block;
  height: -webkit-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -webkit-fit-content;
  width: fit-content; }

dialog:not([open]) {
  display: none; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
 * ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* User interaction
 * ========================================================================== */
/*
 * 1. Remove the tapping delay in IE 10.
 * 2. Remove the tapping delay on clickable elements
      in all browsers (opinionated).
 */
a,
area,
button,
input,
label,
select,
summary,
textarea,
[tabindex] {
  -ms-touch-action: manipulation;
  /* 1 */
  touch-action: manipulation;
  /* 2 */ }

/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* Accessibility
 * ========================================================================== */
/**
 * Change the cursor on busy elements in all browsers (opinionated).
 */
[aria-busy="true"] {
  cursor: progress; }

/*
 * Change the cursor on control elements in all browsers (opinionated).
 */
[aria-controls] {
  cursor: pointer; }

/*
 * Change the cursor on disabled, not-editable, or otherwise
 * inoperable elements in all browsers (opinionated).
 */
[aria-disabled="true"],
[disabled] {
  cursor: not-allowed; }

/*
 * Change the display on visually hidden accessible elements
 * in all browsers (opinionated).
 */
[aria-hidden="false"][hidden] {
  display: initial; }

[aria-hidden="false"][hidden]:not(:focus) {
  clip: rect(0, 0, 0, 0);
  position: absolute; }

:root, html, body {
  background-color: #fbf7f3;
  color: #474747;
  width: 100%; }

* {
  box-sizeing: border-box; }

li {
  list-style-type: none; }

a {
  color: #474747;
  text-decoration: none; }

a:hover {
  text-decoration: none;
  color: #878378; }

.l-column {
  -ms-flex: 0 1 1180px;
      flex: 0 1 1180px;
  margin: 0 auto;
  padding: 0 20px;
  max-width: 1180px; }

.l-row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: 0 auto; }

.l-halfColumn {
  -ms-flex: 1 0 0px;
      flex: 1 0 0px;
  max-width: 570px;
  margin-right: 40px; }
  .l-halfColumn:nth-child(even) {
    margin-right: 0; }

.l-quaterColumn {
  -ms-flex: 1 0 0px;
      flex: 1 0 0px;
  max-width: 265px;
  margin-right: 40px; }
  .l-quaterColumn:nth-child(4n) {
    margin-right: 0; }

.l-halfTile {
  display: -ms-flexbox;
  display: flex;
  -ms-flex: 1 1 50%;
      flex: 1 1 50%;
  margin: 0;
  padding: 0; }

.button {
  display: inline-block;
  padding: 7px 12px;
  color: #fff;
  background: #252525;
  font-weight: normal;
  font-size: 14px;
  line-height: 1;
  text-decoration: none; }

.sectionLabel {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex: 1 1 auto;
      flex: 1 1 auto;
  padding-top: 20px;
  padding-bottom: 40px;
  color: #474747;
  text-transform: uppercase;
  font-size: 22px;
  line-height: 1; }
  .sectionLabel::before, .sectionLabel::after {
    display: block;
    -ms-flex: 1 0 10%;
        flex: 1 0 10%;
    height: 0;
    border-bottom: 1px solid #474747;
    content: ''; }
  .sectionLabel::before {
    margin-right: 22px; }
  .sectionLabel::after {
    margin-left: 22px; }

@chiarset 'utf-8';
.Footer {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  -ms-flex-align: start;
      align-items: flex-start;
  margin: 40px auto 0;
  padding: 20px 0;
  background-color: #252525;
  color: #878378; }
  .Footer__head {
    -ms-flex: 2 1 50%;
        flex: 2 1 50%; }
  .Footer__head, .Footer__body {
    padding-right: 20px; }
  .Footer__body, .Footer__foot {
    -ms-flex-item-align: start;
        align-self: flex-start;
    -ms-flex: 1 1 25%;
        flex: 1 1 25%; }
  .Footer a {
    color: #878378; }
    .Footer a:hover {
      color: #fff; }

.Header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -ms-flex-align: center;
      align-items: center;
  height: 98px; }
  .Header__head {
    -ms-flex: 1 1 auto;
        flex: 1 1 auto;
    text-align: center; }
  .Header__body {
    -ms-flex: 3 1 auto;
        flex: 3 1 auto;
    font-size: 16px; }

.Menu {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around; }
  .Menu__item {
    display: block;
    padding: 10px 15px;
    text-transform: uppercase; }
  .Menu--sub {
    -ms-flex-direction: column;
        flex-direction: column; }

.Section {
  margin-bottom: 40px; }
  .Section__item {
    margin-bottom: 40px; }
    .Section__item:last-child {
      margin-bottom: 0; }

.EntryPanel {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center; }
  .EntryPanel__main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-item-align: stretch;
        align-self: stretch;
    -ms-flex: 1 1 55%;
        flex: 1 1 55%;
    -ms-flex-direction: column;
        flex-direction: column;
    padding: 20px 0; }
  .EntryPanel__sub {
    -ms-flex: 1 1 45%;
        flex: 1 1 45%;
    margin-right: 20px; }
  .EntryPanel__thumb {
    width: 100%;
    height: auto; }
  .EntryPanel__head {
    font-weight: bold;
    font-size: 16px; }
  .EntryPanel__foot {
    margin-top: 10px;
    text-align: right; }
  .EntryPanel__body {
    margin-top: 10px;
    font-size: 14px; }

.ImageSlide {
  position: relative;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  overflow: hidden; }
  .ImageSlide__main {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: nowrap;
        flex-wrap: nowrap; }
  .ImageSlide__item {
    -ms-flex: 0 0 80%;
        flex: 0 0 80%; }
  .ImageSlide__image {
    width: 100%;
    height: auto; }
  .ImageSlide__sub {
    position: relative;
    top: -40px;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center; }
  .ImageSlide__dot {
    display: block;
    overflow: hidden;
    margin-right: 20px;
    width: 20px;
    height: 20px;
    border: 1px solid #252525;
    border-radius: 10px;
    text-indent: 100%;
    white-space: nowrap;
    cursor: pointer; }
    .ImageSlide__dot:last-child {
      margin-right: 0; }
    .ImageSlide__dot:hover {
      background: rgba(37, 37, 37, 0.7); }
    .ImageSlide__dot.isActive {
      background: #252525; }

.OverlayPanel {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  width: 100%;
  padding: 10% 20%;
  background-color: rgba(0, 0, 0, 0.2);
  color: #fff; }
  .OverlayPanel:hover {
    color: #fff;
    background-color: rgba(0, 0, 0, 0.4); }
  .OverlayPanel__head {
    margin: 0 10%;
    padding: 24px 36px;
    border: 2px solid #fff;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: .1em;
    font-size: 24px; }
    .OverlayPanel:hover .OverlayPanel__head {
      background-color: rgba(255, 255, 255, 0.2); }
  .OverlayPanel__body {
    margin: 16px auto; }

.IconPanel {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  cursor: pointer; }
  .IconPanel__head {
    padding: 20px;
    text-align: center;
    font-size: 18px; }
  .IconPanel__body {
    padding: 30px;
    max-width: 100%;
    line-height: 1.5; }

.NewsList {
  display: table;
  border-spacing: 0 10px;
  border-collapse: separate; }
  .NewsList__item　 {
    display: table-row; }
  .NewsList__head {
    display: table-cell;
    padding-right: 40px; }
  .NewsList__body {
    display: table-cell; }

.IndexPage__foodMenu, .IndexPage__drinkMenu {
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover; }

.IndexPage__drinkMenu {
  background-image: url("../images/top/menu_drink.jpg"); }

.IndexPage__foodMenu {
  background-image: url("../images/top/menu_food.jpg"); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
